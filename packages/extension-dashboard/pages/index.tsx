import { NoSsr } from '@mui/material';
import { Badge, Link, Navbar } from '@nextui-org/react';
import { colorfulTextStyle } from 'extension-common/src/common-colorful-button';
import type { NextPage } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import React, { useContext, useEffect, useState } from 'react';
import { DndProvider } from 'react-dnd';
import { HTML5Backend } from 'react-dnd-html5-backend';
import styled from 'styled-components';
import { useEnsName } from 'wagmi';

import { UserContext } from '../context/useUser';
import styles from '../styles/Home.module.css';

const IndexComponent = dynamic(() => import('../components/pages/Index'), {
  ssr: false,
});

const AddressButton = styled.span`
  ${colorfulTextStyle}
  margin-right: 20px;
  font-weight: 600;
`;
function AddressSPAN(props: { address: string }) {
  const { data, isError, isLoading } = useEnsName({
    address: props.address as `0x${string}`,
  });

  if (isLoading) return <AddressButton>{props.address}</AddressButton>;
  if (isError) return <AddressButton>{props.address}</AddressButton>;
  return <AddressButton>{data || props.address}</AddressButton>;
}

const Home: NextPage = () => {
  const { user, logout, fetchLoginInfo } = useContext(UserContext);

  async function _logout() {
    logout();
    window.location.reload();
  }
  async function gotoLogin() {
    chrome.tabs.create({
      url: chrome.runtime.getURL('login.html'),
    });
  }
  const [logoURL, setLogoURL] = useState<string>();
  const [indexLogoURL, setIndexLogoURL] = useState<string>();
  useEffect(() => {
    fetchLoginInfo();
    const _logoURL = chrome?.runtime?.getURL('images/logo-128.png');
    setLogoURL(_logoURL);
    const _indexLogoURL = chrome?.runtime?.getURL('images/index-logo-2.png');
    setIndexLogoURL(_indexLogoURL);

    chrome?.runtime?.onMessage.addListener(function (
      request,
      sender,
      sendResponse,
    ) {
      if (request.cmd === 'login_success') {
        window.location.reload();
      }
    });
  }, []);

  return (
    <NoSsr>
      <div className={styles.container}>
        <Head>
          <title>MetaPavo Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href={logoURL} />
        </Head>
        <header className={styles.head}>
          <div className={styles.headInner}>
            <div
              style={{
                display: 'flex',
                alignItems: 'center',
              }}
            >
              <img
                src={indexLogoURL}
                style={{ height: '33px', marginRight: '10px' }}
              />
              <Badge
                color="secondary"
                size="xs"
                disableOutline
                css={{
                  fontSize: '12px',
                  height: '18px',
                  width: '45px',
                  fontWeight: '450',
                }}
              >
                Beta
              </Badge>
            </div>

            <div
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '10px',
              }}
            >
              {user?.address ? (
                <>
                  <AddressSPAN address={user.address} />

                  <Link
                    onClick={() => {
                      _logout();
                    }}
                  >
                    Logout
                  </Link>
                </>
              ) : (
                <Link
                  color="inherit"
                  onClick={() => {
                    gotoLogin();
                  }}
                >
                  Login
                </Link>
              )}
            </div>
            <div
              style={{
                flex: 1,
                display: 'flex',
                justifyContent: 'center',
                gap: '20px',
                color: '#fff',
                fontWeight: '500',
                position: 'absolute',
                top: '0',
                width: 'auto',
                left: '50%',
                transform: 'translateX(-50%)',
                height: '50px',
              }}
            >
              <Link
                href="https://metapavo.gitbook.io/whitepaper/"
                isExternal
                css={{
                  color: '#fff',
                  fontWeight: '500',
                }}
              >
                WhitePaper
              </Link>
              <Link
                href="https://twitter.com/MetaPavo"
                isExternal
                css={{
                  color: '#fff',
                  fontWeight: '500',
                }}
              >
                Twitter
              </Link>
              <Link
                href="https://discord.gg/6r5z8fxZRt"
                isExternal
                css={{
                  color: '#fff',
                  fontWeight: '500',
                }}
              >
                Discord
              </Link>
              <Link
                href="https://github.com/lxdao-official/metapavo-extension"
                isExternal
                css={{
                  color: '#fff',
                  fontWeight: '500',
                }}
              >
                Github
              </Link>
              <Link
                href="https://notionforms.io/forms/metapavo-feedback"
                isExternal
                css={{
                  color: '#fff',
                  fontWeight: '500',
                }}
              >
                Feedback
              </Link>
            </div>
          </div>
        </header>
        <main className={styles.main}>
          <DndProvider backend={HTML5Backend}>
            <IndexComponent />
          </DndProvider>
        </main>
      </div>
    </NoSsr>
  );
};

export default Home;
