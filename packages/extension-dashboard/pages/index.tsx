import { NoSsr } from '@mui/material';
import type { NextPage } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import styled from 'styled-components';
import { useEnsName } from 'wagmi';

import styles from '../styles/Home.module.css';
import { users } from '../utils/apis';
import { fetchWrapped } from '../utils/apis/fetch';
import {
  colorfulButtonStyle,
  colorfulTextStyle,
} from '../utils/common-colorful-button';

const IndexComponent = dynamic(() => import('../components/pages/Index'), {
  ssr: false,
});

const AddressButton = styled.span`
  ${colorfulTextStyle}
  margin-right:20px;
  font-weight: 600;
`;
function AddressSPAN(props: { address: string }) {
  const { data, isError, isLoading } = useEnsName({
    address: props.address as `0x${string}`,
  });

  if (isLoading) return <AddressButton>{props.address}</AddressButton>;
  if (isError) return <AddressButton>{props.address}</AddressButton>;
  return <AddressButton>{data}</AddressButton>;
}

const LoginButton = styled.button`
  ${colorfulButtonStyle}
`;
const Home: NextPage = () => {
  const [userInfo, setUserInfo] = useState<users>();

  async function fetchLoginInfo() {
    return new Promise((resolve, reject) => {
      fetchWrapped(process.env.NEXT_PUBLIC_APIBASE + '/users/me', {
        method: 'GET',
      })
        .then((json) => {
          if (json?.data?.address) {
            setUserInfo(json.data);
          } else {
            reject();
          }
        })
        .catch(reject);
    });
  }
  async function logout() {
    chrome.storage.local.set({ access_token: '' }, function () {});
    gotoLogin();
  }
  async function gotoLogin() {
    chrome.tabs.create({
      url: chrome.runtime.getURL('login.html'),
    });
  }
  const [logoURL, setLogoURL] = useState<string>();
  const [indexLogoURL, setIndexLogoURL] = useState<string>();
  useEffect(() => {
    fetchLoginInfo();
    const _logoURL = chrome?.runtime?.getURL('images/logo-128.png');
    setLogoURL(_logoURL);
    const _indexLogoURL = chrome?.runtime?.getURL('images/index-logo-2.png');
    setIndexLogoURL(_indexLogoURL);
  }, []);

  return (
    <NoSsr>
      <div className={styles.container}>
        <Head>
          <title>MetaPavo Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href={logoURL} />
        </Head>
        <header className={styles.head}>
          <div className={styles.headInner}>
            <img src={indexLogoURL} style={{ height: '25px' }} />
            {userInfo?.address ? (
              <span>
                <AddressSPAN address={userInfo.address} />
                <a
                  onClick={() => {
                    logout();
                  }}
                >
                  Logout
                </a>
              </span>
            ) : (
              <a
                onClick={() => {
                  gotoLogin();
                }}
              >
                Login
              </a>
            )}
          </div>
        </header>
        <main className={styles.main}>
          <IndexComponent />
        </main>
      </div>
    </NoSsr>
  );
};

export default Home;
